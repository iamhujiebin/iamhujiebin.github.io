{"version":3,"file":"static/js/122.85310108.chunk.js","mappings":"8RAyFA,EAjFc,WACV,IAAIA,EAAa,kBACbC,EAAAA,KACAD,EAAa,0BAEjB,IAAOE,GAAcC,EAAAA,EAAAA,KAAdD,WACDE,GAAWC,EAAAA,EAAAA,MACXC,EAAQ,eAAAC,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,EAAOC,GAAI,IAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAP,EAAAA,EAAAA,KAAAQ,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEL,OADnBC,QAAQC,IAAIV,GACLC,EAAgBD,EAAhBC,OAAQC,EAAQF,EAARE,KAAII,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAETlB,EAAWqB,MAAM,CAACV,OAAAA,EAAQC,KAAAA,IAAM,QACtCU,EAAAA,EAAAA,WAAUX,IACVY,EAAAA,EAAAA,SAAQX,GACRY,EAAAA,GAAAA,QAAgB,4BAChBtB,EAAS,KAAKc,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAS,GAAAT,EAAA,SAEdG,QAAQC,IAAI,OAAMJ,EAAAS,IAClBD,EAAAA,GAAAA,OAAwB,QAAVX,EAAAG,EAAAS,GAAEC,gBAAQ,IAAAb,GAAM,QAANC,EAAVD,EAAYH,YAAI,IAAAI,OAAN,EAAVA,EAAkBU,UAAW,wCAAU,yBAAAR,EAAAW,OAAA,GAAAlB,EAAA,mBAE5D,gBAbamB,GAAA,OAAAvB,EAAAwB,MAAA,KAAAC,UAAA,KAcd,OACIC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,QAAOC,UAClBC,EAAAA,EAAAA,MAACC,EAAAA,EAAI,CAACH,UAAWlC,EAAWmC,SAAA,EACxBF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,aAAaI,I,qmWAAWC,IAAI,MAG3CH,EAAAA,EAAAA,MAACI,EAAAA,EAAI,CACDC,gBAAiB,CAAC,SAAU,YAC5BnC,SAAUA,EACVoC,cAAe,CACX7B,QAAQ8B,EAAAA,EAAAA,cAAcA,EAAAA,EAAAA,aAAc,GACpC7B,MAAM8B,EAAAA,EAAAA,YAAYA,EAAAA,EAAAA,WAAY,IAChCT,SAAA,EAEFF,EAAAA,EAAAA,KAACO,EAAAA,EAAAA,KAAS,CACNK,KAAK,SACLC,MACI,CACI,CAACC,UAAU,EAAMrB,QAAS,wCAC1B,CAACsB,QAAS,gBAAiBtB,QAAS,6CAAWe,gBAAiB,WAEvEN,UAEDF,EAAAA,EAAAA,KAACgB,EAAAA,EAAK,CAACC,KAAK,QAAQC,YAAY,4CAEpClB,EAAAA,EAAAA,KAACO,EAAAA,EAAAA,KAAS,CACNK,KAAK,OACLC,MACI,CACI,CAACM,IAAK,EAAG1B,QAAS,wCAAWe,gBAAiB,UAC9C,CAACM,UAAU,EAAMrB,QAAS,yCAEjCS,UAEDF,EAAAA,EAAAA,KAACgB,EAAAA,EAAK,CAACC,KAAK,QAAQC,YAAY,4CAEpClB,EAAAA,EAAAA,KAACO,EAAAA,EAAAA,KAAS,CACNK,KAAK,YACLQ,cAAc,UACdP,MAAO,CACH,CACIQ,UAAW,SAACC,EAAGC,GAAK,OAAKA,EAAQC,QAAQC,UAAYD,QAAQE,OAAO,IAAIC,MAAM,kCAAS,IAE7FzB,UAEFF,EAAAA,EAAAA,KAAC4B,EAAAA,EAAQ,CAAC3B,UAAU,uBAAsBC,SAAC,gIAI/CF,EAAAA,EAAAA,KAACO,EAAAA,EAAAA,KAAS,CAAAL,UACNF,EAAAA,EAAAA,KAAC6B,EAAAA,GAAM,CAACC,KAAK,UAAUC,SAAS,SAASd,KAAK,QAAQe,OAAK,EAAA9B,SAAC,0BAQpF,C","sources":["pages/Login/index.js"],"sourcesContent":["import {Card, Form, Input, Button, Checkbox, message} from 'antd'\r\nimport logo from '@/assets/logo.png'\r\nimport './index.scss'\r\nimport {useStore} from '@/store'\r\nimport {useNavigate} from 'react-router-dom'\r\nimport {isMobile} from \"react-device-detect\";\r\nimport {getCode, setCode, getMobile, setMobile} from \"@/utils\"\r\n\r\nconst Login = () => {\r\n    let loginStyle = \"login-container\"\r\n    if (isMobile) {\r\n        loginStyle = \"login-container-mobile\"\r\n    }\r\n    const {loginStore} = useStore()\r\n    const navigate = useNavigate()\r\n    const onFinish = async (data) => {\r\n        console.log(data)\r\n        const {mobile, code} = data\r\n        try {\r\n            await loginStore.login({mobile, code})\r\n            setMobile(mobile)\r\n            setCode(code)\r\n            message.success('登录成功')\r\n            navigate('/') // 登录成功跳转 根路径\r\n        } catch (e) {\r\n            console.log('err?', e)\r\n            message.error(e.response?.data?.message || '手机号后六位') // 这么牛逼的写法\r\n        }\r\n    }\r\n    return (\r\n        <div className='login'>\r\n            <Card className={loginStyle}>\r\n                <img className='login-logo' src={logo} alt=''></img>\r\n                {/* 登录表单 */}\r\n                {/* onBlur:失去焦点*/}\r\n                <Form\r\n                    validateTrigger={['onBlur', 'onChange']}\r\n                    onFinish={onFinish}\r\n                    initialValues={{\r\n                        mobile: getMobile() ? getMobile() : '',\r\n                        code: getCode() ? getCode() : '',\r\n                    }}\r\n                >\r\n                    <Form.Item\r\n                        name='mobile'\r\n                        rules={\r\n                            [\r\n                                {required: true, message: '请输入手机号'},\r\n                                {pattern: /^1[3-9]\\d{9}$/, message: '手机号格式不对', validateTrigger: 'onBlur'}\r\n                            ]\r\n                        }\r\n                    >\r\n                        <Input size='large' placeholder='请输入手机号'/>\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        name='code'\r\n                        rules={\r\n                            [\r\n                                {len: 6, message: '验证码6个字符', validateTrigger: 'onBlur'},\r\n                                {required: true, message: '请输入验证码'}\r\n                            ]\r\n                        }\r\n                    >\r\n                        <Input size='large' placeholder='请输入验证码'/>\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        name='agreement'\r\n                        valuePropName=\"checked\"\r\n                        rules={[\r\n                            {\r\n                                validator: (_, value) => value ? Promise.resolve() : Promise.reject(new Error('请同意协议'))\r\n                            }\r\n                        ]}\r\n                    >\r\n                        <Checkbox className='login-checkbox-label'>\r\n                            我已阅读并同意「用户协议」和「隐私条款」\r\n                        </Checkbox>\r\n                    </Form.Item>\r\n                    <Form.Item>\r\n                        <Button type='primary' htmlType='submit' size='large' block>\r\n                            登录\r\n                        </Button>\r\n                    </Form.Item>\r\n                </Form>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login"],"names":["loginStyle","isMobile","loginStore","useStore","navigate","useNavigate","onFinish","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","data","mobile","code","_e$response","_e$response$data","wrap","_context","prev","next","console","log","login","setMobile","setCode","message","t0","response","stop","_x","apply","arguments","_jsx","className","children","_jsxs","Card","src","alt","Form","validateTrigger","initialValues","getMobile","getCode","name","rules","required","pattern","Input","size","placeholder","len","valuePropName","validator","_","value","Promise","resolve","reject","Error","Checkbox","Button","type","htmlType","block"],"sourceRoot":""}